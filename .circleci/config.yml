version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/Financial-Times/dyn-cli-utils
  golang-node:
    docker:
      - image: circleci/golang:1.11-node
    working_directory: /go/src/github.com/Financial-Times/dyn-cli-utils

jobs:
  install:
    executor: golang
    steps:
      - checkout

      - restore_cache:
          key: v1-gopkg-{{ checksum "Gopkg.lock" }}

      - run:
          name: Install dependencies
          command: |
            if [ ! -d  /go/src/github.com/Financial-Times/dyn-cli-utils/vendor ]; then
                dep ensure
            fi

      - save_cache:
          key: v1-gopkg-{{ checksum "Gopkg.lock" }}
          paths:
            -  /go/src/github.com/Financial-Times/dyn-cli-utils/vendor

      - persist_to_workspace:
          root: .
          paths:
            - .

  verify:
    executor: golang-node
    steps:
      - attach_workspace:
            at: /go/src/github.com/Financial-Times/dyn-cli-utils

      - run:
          name: Check the style
          command: make style

      - run:
          name: Vet the code
          command: make vet

      - run:
          name: Test dependencies for vulnerabilities
          command: make security

  monitor:
    executor: golang-node
    steps:
      - attach_workspace:
            at: /go/src/github.com/Financial-Times/dyn-cli-utils

      - run:
          name: Update snyk monitoring
          command: make security-monitor
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - install
      - verify:
          context: rel-eng-creds
          requires:
            - install
      - monitor:
          context: rel-eng-creds
          requires:
            - install
          filters:
            branches:
              only:
                - master

experimental:
  notify:
    branches:
      only:
        - master
